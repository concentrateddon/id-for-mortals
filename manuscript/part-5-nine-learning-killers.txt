{sample: true}
# Part 5: Nine Learning Killers #
There's a lot you can do to create a better learning environment and experience, but there's a lot you can do to make them worse, too. In this Part, we'll explore some of the "don'ts" of instructional design, as well as some of the built-in behaviors that can get in the way of learning.

# 1. Overteaching
Teach students what they need to know, right then. Don’t try to teach what you, as the instructor, want them to know.

It’s easy to bring your own agenda into a class. After all, you’re the instructor – you literally set the agenda. But the biggest area where I see instructors fail is in teaching what they want students to know, not what students need to know.

Most instructors and instructional designers are familiar with the idea of setting and communicating objectives. If your class is broken into modules, or your book is broken into chapters, you typically start out by stating your objectives. One of my publishers, Manning, has a standard where each chapter starts with a bullet list titled “In this Chapter.” Microsoft Official Curriculum modules start with a module overview that includes the module objectives. Those objectives are what you plan to teach.

Most instructional designers will also agree that objectives should be active, which is why you’ll often see rules like “objectives must start with a gerund.” So, an objective like “SQL Server auditing” wouldn’t be acceptable, but one like “Configuring SQL Server auditing” would be fine, because it starts with a gerund. That’s supposed to make the objective seem more active. I’m not teaching you the feature, I’m teaching you how to configure the feature. That’s a task you complete. It’s a good objective.

Well, no. It isn’t. Nobody wakes up in the morning with a hankering to do that. Configuring, and a huge number of other objectives I see in courses, is a means to an end. It’s what you do in order to achieve what you woke up hankering to do. It’s a step. A process.

I dislike objectives in courses and in books. Each instructional unit – each chapter, or module, or lesson, or whatever you call it – should focus on one need. What is it that the student needs to accomplish? Title the instructional unit to clearly describe the need you’re meeting, and everything else falls into place.

As an aside, instructional designers do have language for this concept. In their terms, I’m setting the chapter title as a terminal objective, and I might use one or more enabling objectives to get there. I still think that structure leaves a lot of room for an instructor to get sidetracked, though. I’d rather state what it is I’m going to teach you, and then ensure that every single word out of my mouth, or on the page, leads directly to that goal.

I might title a chapter something like, “Capturing User Activity by Using SQL Server Auditing.” That’s a statement of something a student might truly want and need to know – how to capture user activity. It’s a job task. It’s a human-level task, something the boss might tell you to do. It scopes the chapter to a particulate technical feature, but the statement is clear about the real-world ability you’re going to be learning.

You then have to be really, really careful about what you teach to lead to that goal. The line between what the instructor wants to teach and what the student needs to know can be really fine.

Let’s take a non-technical example. I’m teaching a class, and we’ve gotten to a module I’ve named “Using a Car to Drive to the Supermarket.” That’s a pretty clear title, although instructionally I may have several sub-tasks I need to teach: starting the car, putting it into reverse, and so on. Those are things the student needs to know in order to achieve the goal stated in the module’s name. You can’t get to the market without starting the car and learning to steer it in different directions.

As an instructor, I want my students to be well-informed. I want them to be smart. I also want to impress them with my own knowledge, so that they think I’m smart and give me a good evaluation at the end of class. And so I decide that they need to know how the brakes on the car work. You depress the brake pedal, an electrical signal goes to the master brake cylinder, and that cylinder compresses and pushed brake fluid to the brakes.

Wrong.

Students do not need to know that. Knowing that information does not in any way help them achieve the goal stated in the name of the module. It might help them with other goals, like troubleshooting or fixing the brakes, but that wasn’t the deal we made with them when we named the module. What they need to know is that you stomp on the brake pedal and the car stops. That’s it.

Here’s why: human brains can only absorb a certain amount of information in a given period of time. After that, those brains literally need to sleep on it, allowing the brain’s natural background processes to organize the new data, make relations and connections to existing data, and get everything neatly filed in the neural data store we call “memory.” Feed someone too much information at once, and the brain goes into an automatic triage mode: I can’t possibly remember all of this. Let’s see if I can figure out what’s important, and I’ll just store that. The problem is that this triage mode isn’t under conscious control, so the student doesn’t get to decide what’s extraneous and what’s vital. The brain makes that decision almost instantly, based on its ability to connect new information with existing information. In other words, the student’s brain might decide that the whole tangent on master brake cylinders was the important bit, and not actually capture the critical fact that stomping on the brake stops the car.

So you must not introduce extraneous information. Teaching isn’t about what you want someone to learn, it’s about what they need to learn in order to absorb the skills that you promised to deliver when you sold them the class, the book, or whatever.

I teach a lot of Microsoft Official Curriculum courses. Microsoft has a lot of challenges when it comes to courseware, not the least of which is the highly variable quality of their certified trainers. In one instance, I was teaching a class that had previously been taught by another guy at the same facility. That man knew this material cold, and a lot more besides. He knew the product inside-out, upside-down, and sideways. He took every minute of the recommended delivery time, and then some, running students from 8:00am to 5:00pm every day, and even shortening lunches sometimes to pull in extra time.

When I taught the class, we went from 9:00am to 3:00pm, had a full hour for lunch, and my students were measurably better at retaining and applying the skills that the course had promised to teach.

The difference? I threw in no tangents. I added no extra information. I didn’t try to prove I was smarter than anybody, and I taught the class with no regards for what I wanted the students to learn. I took the course’s top-level outline – what students had seen when they paid for the class – as what they needed to learn, and I taught nothing that didn’t directly lead to those needs. The fact that I had a shorter day kept my students fresher, meaning they didn’t hit the “fatigue wall” in the afternoon and stop learning outright. Their brains didn’t have to go into triage mode and start indiscriminately dropping new information. They walked away feeling more confident that they’d captured everything I’d taught, because I hadn’t overloaded them with a firehose of information.

When I first started writing, I wrote long-form IT books. I had no real page count limit, and these things would be 600, 800, or even 1,000 pages long. Then I managed to land a monthly column in a trade magazine, where I’d be allotted just 800 words each month. My editor at the time, Keith Ward, told me that writing an 800-word column would make me a better writer pretty quickly, because I’d learn the precious value of every single word. He was correct. These days I have trouble writing books of more than 300 or 400 pages, because I’ve learned to be more concise, and to stay on-topic. My books are better not because they’re shorter, but because they do a better job of teaching – in large part because they’re more concise. That’s the real purpose of the principle I’m writing about, here: be concise.

There’s another lesson here, which is the implicit contract created between an instructor or author and his students or readers. When you name a chapter, or provide a list of objectives, or whatever, you’re promising to deliver just that. If students walk away feeling like they haven’t learned that, then they feel cheated – even if the “failure” was you pushing so much information at them that their brains couldn’t cope. In other words, if you over-teach, you may well fail to deliver on that implicit contract.

The implicit contract is also important in preparing the brain to learn. These are the things you will know, you’re telling each student. This is what I will teach you. That statement can actually help position their brains to learn those things – provided you stick to the contract and don’t wander off-message.

This brain behavior is built-in, and you see it used in all kinds of different situations, often to great effect. Magicians, for example, rely heavily on the fact that our brains will look for whatever we’re told to look for – and they use that to distract us while they’re palming the card or getting a dove from their coat pocket. The minute our brains are told what to expect, we start subconsciously looking for that. So it’s important that, once you’ve created the contract on what a module or chapter will cover, you immediately start delivering on that contract. Every concept you introduce must be explicitly connected to what you said you’d teach.

“I’m going to teach you how to stop a car. Before I get into the actual procedure, I need to talk a bit about momentum, because the concept of momentum is going to affect the procedure.” In that sentence, you’re acknowledging that you’re about to seemingly go off-topic, but you’re immediately providing a connection back to the promised topic. “The more momentum you have, the harder you will have to brake in order to stop the car at the same stopping point.” Now you’ve firmly connected the procedure to your tangent. More momentum, more braking, students’ brains will think. Got it. Now you can go into more detail about what momentum is – but keep it relevant. Don’t discuss Isaac Newton – he may have discovered momentum, but he does nothing to further the contracted goal of stopping the car. Keep the momentum diversion as brief as possible: “The faster your car is going, the more momentum you build up. That momentum must be reduced to zero in order to stop the car. The brakes can reduce momentum, but the more you’ve built up, the faster you’ll have to reduce it in order to stop at a given point.”

So what about student curiosity? What about the student who is really clever, totally grasps what you’re teaching, and wants to know some of the underlying details?

Curiosity is good, and should be encouraged – but not at the expense of the less-curious in class. Instead of going off on a more-detail tangent just to prove that you, as the instructor, really do know this stuff, encourage independent exploration. Build “further reading” references into your instructional materials, and encourage curious students to explore. By doing so, you’ll achieve two goals. First, curious people usually enjoy independent exploration, and by encouraging it you’re encouraging a smarter person. Independent exploration engages a number of higher brain functions, and often helps a student’s brain better cement new knowledge. Second, you’re keeping the rest of the class on-track. Unless you and the curious student can leave the room – something not possible in a book, by the way – you’re putting your tangent in front of everyone. Folks will listen to even a “private” in-class conversation, to be sure they’re not missing something, and now you’re bombarding everyone with extra information. Brain goes into triage mode, class success level goes down.

In books, tangents are often styled as sidebars. They’re often set aside visually in some way, perhaps with a gray background or in a box. Readers are often told to ignore them. The Dummies books (and I did write one of those) label them as something like, “Dumb Stuff You Don’t Need to Know.” Problem is, you can’t stop someone from reading, and they’ll often do so because they fear “missing” something. If they don’t need to know it, don’t put it in the book. Period.

Many of the classes I teach include remote students. Early on, I would shut off my microphone during labs, so that I could discuss issues with each student individually. I relied on the full-room microphone in the ceiling to let remote students know I was still in the room. I’d get into “expanded” discussions with a curious student, and the remotes would invariably, to a person, complain that they couldn’t hear me. I wasn’t talking to them, but they were worried they were missing something. Once I realize that I was breaking my own rule of not introducing tangents, I stopped doing the side discussions. Maybe on breaks, or during lunch, outside the classroom, where it’s more clear that the conversation is private, but never in class.

Mick was right: you can’t always get what you want. But if you try sometimes, you might find you get what you – or rather, your students – need. When you begin a new unit of instruction, clearly state what students will learn. Do so in terms that are meaningful to the student’s life – state goals that represent real-world tasks and abilities. Ensure that every word out of your mouth, or every word written on the page, ties directly to that goal. Teach nothing that does not apply directly to that goal. Teach what they need, and not what you want them to know.

Students have a limited ability to learn in a fixed period of time. Make sure you're focusing on the most crucial items, and teach only those. You'll help students be more effective when you take on the responsibility of triaging the information.

# 2. 
